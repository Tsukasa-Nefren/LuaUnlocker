name: CI

on:
  push:
    branches: ['*']
    tags: ['*']
  pull_request:

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk

    # bash 고정 (pipefail 사용 가능)
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          path: LuaUnlocker
          submodules: true

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          path: mmsource-2.0

      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install build deps
        run: |
          set -euo pipefail
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y curl unzip python3 python3-pip git zip protobuf-compiler

      - name: Download HL2SDK-CS2
        run: |
          set -euo pipefail
          curl -L https://github.com/alliedmodders/hl2sdk/archive/refs/heads/cs2.zip -o sdk.zip
          unzip -q sdk.zip -d LuaUnlocker
          rm -f sdk.zip
          if [ ! -d "LuaUnlocker/hl2sdk-cs2" ]; then
            mv LuaUnlocker/hl2sdk-cs2* LuaUnlocker/hl2sdk-cs2
          fi

      - name: Expose Protobuf headers to public include
        run: |
          set -euo pipefail
          src="LuaUnlocker/hl2sdk-cs2/thirdparty/protobuf-3.21.8/src/google"
          dst="LuaUnlocker/hl2sdk-cs2/public/google"
          mkdir -p "$dst"
          cp -a "$src/." "$dst/"

      - name: Fetch Valve Protobufs (SteamDB)
        run: |
          set -euo pipefail
          git clone --depth=1 https://github.com/SteamDatabase/Protobufs LuaUnlocker/Protobufs

      - name: Generate SDK protobuf headers
        working-directory: LuaUnlocker/hl2sdk-cs2
        run: |
          set -euo pipefail
          echo "protoc version: $(protoc --version || true)"
          inc1="."
          inc2="thirdparty/protobuf-3.21.8/src"
          inc3="../Protobufs"
          inc4="../Protobufs/steam"
          inc5="../Protobufs/csgo"
          # thirdparty 및 public/google 아래 .proto는 생성 스킵(경로만 include)
          find . -name '*.proto' \
            -not -path './thirdparty/*' \
            -not -path './public/google/*' \
            -print0 |
          while IFS= read -r -d '' f; do
            rel="${f#./}"
            protoc -I "$inc1" -I "$inc2" -I "$inc3" -I "$inc4" -I "$inc5" --cpp_out=. "$rel"
          done

      - name: Install AMBuild
        run: |
          set -euo pipefail
          cd ambuild
          python3 setup.py install

      - name: Build (force C++17)
        working-directory: LuaUnlocker
        env:
          MMSOURCE112: ${{ github.workspace }}/mmsource-2.0
          HL2SDKCS2: ${{ github.workspace }}/LuaUnlocker/hl2sdk-cs2
          CC: clang
          CXX: clang++
          # ✅ 사용자 플래그를 마지막에 붙여 -std=c++17이 최종 우선하도록 강제
          CXXFLAGS: -std=gnu++17
        run: |
          set -euo pipefail
          mkdir -p build
          cd build
          python3 ../configure.py -s cs2
          echo ">>> sanity: will try to ensure -std=gnu++17 is used"
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: LuaUnlocker/build/package/*

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          path: LuaUnlocker
          submodules: true

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          path: mmsource-2.0

      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      # Pin protoc to match SDK's protobuf-3.21.8
      - name: Install protoc v21.8 (Windows)
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $zip = Join-Path $env:RUNNER_TEMP 'protoc.zip'
          Invoke-WebRequest -Uri https://github.com/protocolbuffers/protobuf/releases/download/v21.8/protoc-21.8-win64.zip -OutFile $zip
          Expand-Archive -Path $zip -DestinationPath (Join-Path $env:RUNNER_TEMP 'protoc') -Force
          Remove-Item $zip -Force
          $protocBin = Join-Path $env:RUNNER_TEMP 'protoc\bin'
          $env:PATH = "$protocBin;$env:PATH"
          "$protocBin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          protoc --version

      - name: Download HL2SDK-CS2
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Invoke-WebRequest -Uri https://github.com/alliedmodders/hl2sdk/archive/refs/heads/cs2.zip -OutFile "$env:GITHUB_WORKSPACE\sdk.zip"
          Expand-Archive -Path "$env:GITHUB_WORKSPACE\sdk.zip" -DestinationPath "$env:GITHUB_WORKSPACE\LuaUnlocker" -Force
          Remove-Item "$env:GITHUB_WORKSPACE\sdk.zip"
          if (!(Test-Path "$env:GITHUB_WORKSPACE\LuaUnlocker\hl2sdk-cs2")) {
            $cand = Get-ChildItem "$env:GITHUB_WORKSPACE\LuaUnlocker" -Directory | Where-Object { $_.Name -like 'hl2sdk-cs2*' } | Select-Object -First 1
            if ($cand) { Move-Item $cand.FullName "$env:GITHUB_WORKSPACE\LuaUnlocker\hl2sdk-cs2" -Force }
          }

      - name: Expose Protobuf headers to public include
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $src = Join-Path $env:GITHUB_WORKSPACE 'LuaUnlocker\hl2sdk-cs2\thirdparty\protobuf-3.21.8\src\google'
          $dst = Join-Path $env:GITHUB_WORKSPACE 'LuaUnlocker\hl2sdk-cs2\public\google'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          Copy-Item -Path (Join-Path $src '*') -Destination $dst -Recurse -Force -ErrorAction Stop

      - name: Fetch Valve Protobufs (SteamDB)
        shell: pwsh
        run: |
          git clone --depth=1 https://github.com/SteamDatabase/Protobufs "$env:GITHUB_WORKSPACE\LuaUnlocker\Protobufs"

      - name: Generate SDK protobuf headers
        working-directory: LuaUnlocker/hl2sdk-cs2
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Write-Host "protoc version: $(protoc --version)"
          $includeArgs = @('-I.', '-Ithirdparty/protobuf-3.21.8/src', '-I../Protobufs', '-I../Protobufs/steam', '-I../Protobufs/csgo')
          Get-ChildItem -Recurse -Filter *.proto `
            | Where-Object { ($_.FullName -notmatch '\\thirdparty\\') -and ($_.FullName -notmatch '\\public\\google\\') } `
            | ForEach-Object {
              $rel = Resolve-Path -Relative $_.FullName
              $rel = $rel -replace '^[.\\]+','' -replace '\\','/'
              & protoc $includeArgs --cpp_out=. $rel
              if ($LASTEXITCODE -ne 0) { throw "protoc failed on $rel with code $LASTEXITCODE" }
            }

      - name: Install AMBuild
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Push-Location "$env:GITHUB_WORKSPACE\ambuild"
          python setup.py install
          if ($LASTEXITCODE -ne 0) { throw "AMBuild setup.py install failed" }
          Pop-Location

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build
        working-directory: LuaUnlocker
        shell: pwsh
        env:
          MMSOURCE112: ${{ github.workspace }}\mmsource-2.0
          HL2SDKCS2: ${{ github.workspace }}\LuaUnlocker\hl2sdk-cs2
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -ItemType Directory -Force -Path build | Out-Null
          Push-Location build
          python ../configure.py -s cs2
          ambuild
          Pop-Location

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: LuaUnlocker\build\package\*

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Ensure packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y zip

      - name: Package
        run: |
          set -euo pipefail
          version="${GITHUB_REF#refs/tags/}"
          if [ -d "./Linux" ]; then
            tar -czf "LuaUnlocker-${version}-linux.tar.gz" -C "./Linux" .
          fi
          if [ -d "./Windows" ]; then
            zip -r "LuaUnlocker-${version}-windows.zip" "./Windows"
          fi

      - name: Create Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: LuaUnlocker-*
          tag: ${{ github.ref }}
          file_glob: true
