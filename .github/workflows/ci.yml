name: CI

on:
  push:
    branches: ['*']
    tags: ['*']
  pull_request:

jobs:
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          path: LuaUnlocker
          submodules: true

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          path: mmsource-2.0

      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install deps
        run: |
          apt-get update
          apt-get install -y protobuf-compiler curl unzip python3 python3-pip git zip

      - name: Download HL2SDK-CS2
        run: |
          curl -L https://github.com/alliedmodders/hl2sdk/archive/refs/heads/cs2.zip -o sdk.zip
          unzip -q sdk.zip -d LuaUnlocker
          rm -f sdk.zip

      - name: Generate SDK protobuf headers
        working-directory: LuaUnlocker/hl2sdk-cs2
        shell: bash
        run: |
          set -euo pipefail
          inc1="."
          inc2="thirdparty/protobuf-3.21.8/src"
          # thirdparty 이하의 proto는 빌드 대상에서 제외 (import 경로만 제공)
          find . -name '*.proto' -not -path './thirdparty/*' -print0 \
          | while IFS= read -r -d '' f; do
              rel="${f#./}"
              protoc -I "$inc1" -I "$inc2" --cpp_out=. "$rel"
            done

      - name: Install AMBuild
        run: python3 -m pip install ./ambuild

      - name: Build
        working-directory: LuaUnlocker
        env:
          MMSOURCE112: ${{ github.workspace }}/mmsource-2.0
          HL2SDKCS2: ${{ github.workspace }}/LuaUnlocker/hl2sdk-cs2
        run: |
          set -euo pipefail
          mkdir -p build
          cd build
          python3 ../configure.py -s cs2
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: LuaUnlocker/build/package/*

  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          path: LuaUnlocker
          submodules: true

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          path: mmsource-2.0

      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install Protobuf
        run: choco install protoc -y

      - name: Download HL2SDK-CS2
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          Invoke-WebRequest -Uri https://github.com/alliedmodders/hl2sdk/archive/refs/heads/cs2.zip -OutFile "$env:GITHUB_WORKSPACE\sdk.zip"
          Expand-Archive -Path "$env:GITHUB_WORKSPACE\sdk.zip" -DestinationPath "$env:GITHUB_WORKSPACE\LuaUnlocker" -Force
          Remove-Item "$env:GITHUB_WORKSPACE\sdk.zip"

      - name: Generate SDK protobuf headers
        working-directory: LuaUnlocker/hl2sdk-cs2
        shell: pwsh
        run: |
          $ErrorActionPreference = "Stop"
          $includeArgs = @("-I.","-Ithirdparty/protobuf-3.21.8/src")

          Get-ChildItem -Recurse -Filter *.proto `
          | Where-Object {
              # thirdparty 이하의 proto는 스킵 (import path만 사용)
              $_.FullName -notmatch '\\thirdparty\\'
            } `
          | ForEach-Object {
              $rel = Resolve-Path -Relative $_.FullName
              $rel = $rel -replace '^[.\\]+','' -replace '\\','/'
              & protoc $includeArgs --cpp_out=. $rel
            }

      - name: Install AMBuild
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          python -m pip install "$env:GITHUB_WORKSPACE\ambuild"

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build
        working-directory: LuaUnlocker
        shell: pwsh
        env:
          MMSOURCE112: ${{ github.workspace }}\mmsource-2.0
          HL2SDKCS2: ${{ github.workspace }}\LuaUnlocker\hl2sdk-cs2
        run: |
          $ErrorActionPreference = "Stop"
          New-Item -ItemType Directory -Force -Path build | Out-Null
          Push-Location build
          python ../configure.py -s cs2
          ambuild
          Pop-Location

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows
          path: LuaUnlocker\build\package\*

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Package
        run: |
          set -euo pipefail
          version="${GITHUB_REF#refs/tags/}"
          if [ -d "./Linux" ]; then
            tar -czf "LuaUnlocker-${version}-linux.tar.gz" -C "./Linux" .
          fi
          if [ -d "./Windows" ]; then
            zip -r "LuaUnlocker-${version}-windows.zip" "./Windows"
          fi

      - name: Create Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: LuaUnlocker-*
          tag: ${{ github.ref }}
          file_glob: true
