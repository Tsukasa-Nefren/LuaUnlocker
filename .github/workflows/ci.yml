name: CI

on:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
          - os: ubuntu-latest
            container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
            
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
      with:
        path: LuaUnlocker
        submodules: true

    - name: Checkout Metamod
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/metamod-source
        path: mmsource-2.0

    - name: Checkout AMBuild
      uses: actions/checkout@v4
      with:
        repository: alliedmodders/ambuild
        path: ambuild

    - name: Install AMBuild
      shell: bash
      run: |
        cd ambuild
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          python setup.py install
        else
          python3 setup.py install
        fi

    - name: Build
      working-directory: LuaUnlocker
      shell: bash
      run: |
        # 운영체제에 맞춰 SDK 환경변수를 설정합니다.
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "MMSOURCE112=${{ github.workspace }}/mmsource-2.0" >> $GITHUB_ENV
          echo "HL2SDKCS2=${{ github.workspace }}/LuaUnlocker/hl2sdk-cs2" >> $GITHUB_ENV
        else
          export MMSOURCE112=${{ github.workspace }}/mmsource-2.0
          export HL2SDKCS2=${{ github.workspace }}/LuaUnlocker/hl2sdk-cs2
        fi

        mkdir build && cd build
        
        # 운영체제에 맞춰 configure 스크립트를 실행합니다.
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          python ../configure.py -s cs2
        else
          python3 ../configure.py -s cs2
        fi
        
        ambuild

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}
        path: LuaUnlocker/build/package/*

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4

    - name: Package
      run: |
        version=$(echo $GITHUB_REF | sed "s/refs\/tags\///")
        if [ -d "./Linux/" ]; then
          tar -czf LuaUnlocker-${version}-linux.tar.gz -C ./Linux .
        fi
        if [ -d "./Windows/" ]; then
          zip -r LuaUnlocker-${version}-windows.zip ./Windows
        fi

    - name: Create Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: LuaUnlocker-*
        tag: ${{ github.ref }}
        file_glob: true
